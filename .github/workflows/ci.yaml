on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # every day at midnight

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v29
      - name: Update the nixpkgs flake lock
        run: |
          cd nixpkgs
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          nix flake update --commit-lock-file
          git push origin HEAD:main

  create-release:
    runs-on: ubuntu-latest
    needs: [update]
    outputs:
      release: ${{steps.date.outputs.date}}
    steps:
      - uses: actions/checkout@v4
      - name: Get date
        id: date
        run: echo "date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT
      - name: Create release
        run: gh release create ${{steps.date.outputs.date}} --generate-notes --target ${{github.ref}} --draft
        env:
          GH_TOKEN: ${{github.token}}

  build:
    runs-on: ubuntu-latest
    needs: [update, create-release]
    strategy:
      matrix:
        arch: [aarch64, x86_64]
        os: [linux, darwin]
        channel: [unstable, "24.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v29
      - name: Build
        run: |
          eval "$(nix print-dev-env)"
          nix-eval-jobs --workers 4 --max-memory-size 3000 --flake ./nixpkgs#'"${{matrix.channel}}"'.legacyPackages.${{matrix.arch}}-${{matrix.os}} 2>/dev/null | pv --line-mode --size 125000 | ./mkdb.py ${{matrix.arch}}-${{matrix.os}}-${{matrix.channel}}.db
          zstd -T0 -19 ${{matrix.arch}}-${{matrix.os}}-${{matrix.channel}}.db
          gh release upload ${{needs.create-release.outputs.release}} ${{matrix.arch}}-${{matrix.os}}-${{matrix.channel}}.db.zst --clobber
        env:
          GH_TOKEN: ${{github.token}}

  
  publish-release:
    runs-on: ubuntu-latest
    needs: [create-release, build]
    steps:
      - uses: actions/checkout@v4
      - run: |
          gh release edit ${{needs.create-release.outputs.release}} --draft=false
        env:
          GH_TOKEN: ${{github.token}}